<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas height="15" autoLayout="false" borderStyle="solid" borderThickness="1" borderColor="0xefefef" creationComplete="componentInit();"
opaqueBackground="{termin.color}"
xmlns:mx="http://www.adobe.com/2006/mxml"
visible="{standort.enabled}" 
explicitWidth="{standort.enabled ? 120 : 0}"
cacheAsBitmap="true"
explicitHeight="15"
>
			<mx:Script><![CDATA[
				import org.osflash.thunderbolt.Logger;
				import mx.core.DragSource;
				import mx.managers.DragManager;
				import mx.events.*;
				import com.sag.models.*;
				import mx.binding.utils.ChangeWatcher;

				[Bindable]
				public var showReferent:Boolean = false;
				
				[Bindable]
				public var showTeilnehmer:Boolean = false;
				
				[Bindable]
				public var tag:String = null;
				
				[Bindable]
				public var standort:Standort;
				
				[Bindable]
				public var termine:SPlanungMonat = null;
				
				[Bindable]
				public var termin:Termin = null;
			
				public function mouseMoveHandler(event:MouseEvent):void {
					//fixme: info object kann ruhig vorinitialisiert werden, muss nur auf
					// den change watcher reagieren
					if ( termin.freigegeben ) return;
					
					var dragInitator:Label = Label(event.currentTarget);
					var ds:DragSource = new DragSource();
					var info:Object = new Object;
					var lbl:Label = new Label();
					
					lbl.text = termin.name;
					lbl.opaqueBackground = termin.color;
					
					info.tag = tag;
					info.monat = termine.monat;
					info.id = termin.id;
					info.standort_id = standort.id;
					info.seminar_id = termin.id;
					info.dauer = termin.dauer;
					
					ds.addData(info, "moveSeminar");
					
					DragManager.doDrag(dragInitator, ds, event, lbl);
				}
				
				
				private function componentInit():void {
					ChangeWatcher.watch(this, "termin", terminChanged);
				}
				
				private function terminChanged ():void {
			
				}

				/** external interface **/
				public function updateStatus(nstatus:String):void {
					termine.updateStatus(termin.id, standort.id, nstatus);
					//termin = termine.getTermin(tag, standort.id);
				}
			]]></mx:Script>
			<mx:Label  width="10" height="15" paddingTop="-2" id="status" text="{termin.status}" color="0x000000" opaqueBackground="{termin.freigabeFarbe}" fontSize="8"/>
			
			<mx:Label x="10" width="75" paddingTop="-2" height="15" id="lbl" mouseDown="mouseMoveHandler(event);"  text="{termin.name}" color="{termin.fontColor}" fontSize="8" />
			<mx:Label right="1" width="40" height="15" paddingTop="-2" id="ref" color="{termin.fontColor}" text="{termin.referenten}" visible="{showReferent}" fontSize="8"/>
			<mx:Label right="1" width="40" height="15" paddingTop="-2" id="teilnehmer" color="{termin.fontColor}" text="{termin.teilnehmer}" visible="{showTeilnehmer}" fontSize="8"/>

</mx:Canvas>