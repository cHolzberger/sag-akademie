<?php
//require_once (dirname (__FILE__) . "/SeminarArtReferent.php");
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SeminarArt extends BaseSeminarArt {

	public function setUp() {
		parent::setUp();

		$this->actAs("SeminarArtTemplate");
	}

	/**
	 *	Gibt true zurueck wenn ein besimmter referent schon am $tag vorhanden ist
	 * @param Int $referent_id
	 * @param Int $tag
	 */
	public function hasReferent($referent_id, $tag, $standort_id) {
		$q = Doctrine_Query::create();
		$q->from("SeminarArtReferent sr");
		$q->where("sr.tag = ?", $tag);
		$q->andWhere("sr.seminar_art_id = ?", $this->id);
		$q->andWhere("sr.referent_id = ?", $referent_id);
		$q->andWhere("sr.standort_id = ?", $standort_id);

		return $q->count();
	}

	/**
	 * fuegt diesem seminar den referenten mit der id $id hinzu
	 * @param Int $id
	 * @param Int $tag
	 * @param Int $standort_id
	 */
	public function addReferent($referent_id, $tag, $standort_id, $theorie = 0, $praxis = 0, $start_stunde = 0, $start_minute = 0, $ende_stunde = 0, $ende_minute = 0, $start_praxis_stunde = 0, $start_praxis_minute = 0, $ende_praxis_stunde = 0, $ende_praxis_minute = 0, $optional = 0) {
		$ref = new SeminarArtReferent();
		$ref->tag = $tag;
		$ref->referent_id = $referent_id;
		$ref->seminar_art_id = $this->id;
		$ref->standort_id = $standort_id;
		$ref->theorie = $theorie;
		$ref->praxis = $praxis;
		$ref->start_stunde = $start_stunde;
		$ref->start_minute = $start_minute;
		$ref->ende_stunde = $ende_stunde;
		$ref->ende_minute = $ende_minute;
		/** praxis **/
		$ref->start_praxis_stunde = $start_praxis_stunde;
		$ref->start_praxis_minute = $start_praxis_minute;
		$ref->ende_praxis_stunde = $ende_praxis_stunde;
		$ref->ende_praxis_minute = $ende_praxis_minute;

		$ref->optional = $optional;
		$ref->save();
	}

	public function clearReferenten($standort_id) {
		foreach ($this->Referenten as $referent) {
			if ($referent->standort_id == $standort_id) {
				$referent->delete();
			}
		}
	}

	public function preSave($obj) {
		$this->kursgebuehr = NumberFormat::toNumber($this->kursgebuehr);
		$this->kosten_pruefung = NumberFormat::toNumber($this->kosten_pruefung);
		$this->kosten_verpflegung = NumberFormat::toNumber($this->kosten_verpflegung);
		$this->kosten_unterlagen = NumberFormat::toNumber($this->kosten_unterlagen);
		$this->kosten_refer = NumberFormat::toNumber($this->kosten_refer);
		$this->stunden_pro_tag = NumberFormat::toNumber($this->stunden_pro_tag);
		$this->pause_pro_tag = NumberFormat::toNumber($this->pause_pro_tag);
	}

	/**
	 * aktualisiert alle Seminarpreise die zu dieser Seminar art gehören.
	 * Sollten die Seminare gesperrt sein werden Sie übergangen.
	 *
	 * wenn eine standort_id angegeben wird werden nur termine an diesem standort aktualisiert
	 * 
	 * Speert vor dem ausführen vergangene Seminare
	 * 
	 * FALSCH VERSTANDENE AUFGABENSTELLUNG
	 */
	public function syncTermine($standort_id=0) {
		Doctrine::getTable("Seminar")->lockOld();
		$args = array($this->id, 0);
		
		$rows = Doctrine::getTable("SeminarArtAktualisierung")->findByDql("seminar_art_id=?", array($this->id));
		$extQuery = array();
		
		foreach ( $rows as $row) {
			if ( $row->gesperrt == 1) {
				array_push ($extQuery," standort_id != ?");
				array_push ($args, $row->standort_id);
			}
		}
		
		if ($standort_id !=0) {
			array_push ($extQuery," standort_id = ?");
			array_push ($args, $standort_id);
		}
		
		$extQueryStr = join(" AND ", $extQuery);
		if ($extQueryStr != "" ) {
			$extQueryStr = "AND $extQueryString";
		}
		
		$rows = Doctrine::getTable("Seminar")->findByDql("seminar_art_id=? AND aktualisierung_gesperrt=? $extQueryStr", $args);
		foreach ($rows as $row) {
			$row->syncToSeminarArt();
		}
	}

	/**
	 * FALSCH VERSTANDENE AUFGABENSTELLUNG
	 * IM MMENT NICHT BEN:TIGT
	 */
	public function lockByStandortTableProxy($seminar_art_id, $standort_id, $locked) {
		$rows = Doctrine::getTable("SeminarArtAktualisierung")->findByDql("seminar_art_id=? AND standort_id=?", array($seminar_art_id, $standort_id));
		if (count($rows) == 0) {
			$row = new SeminarArtAktualisierung();
			$row->standort_id = $standort_id;
			$row->seminar_art_id = $seminar_art_id;
			if ($locked == "on" || $locked == "true" || $locked == "1") {
				$row->gesperrt = 1;
			} else {
				$row->gesperrt = 0;
			}
			$row->save();
		} else {
			foreach ($rows as $row) {
				if ($locked == "on" || $locked == "true" || $locked == "1") {
					$row->gesperrt = 1;
				} else {
					$row->gesperrt = 0;
				}
				$row->save();
			}
		}
	}
	
	/**
	 * FALSCH VERSTANDENE AUFGABENSTELLUNG
	 * IM MMENT NICHT BEN:TIGT
	 */
	public function isLockedByStandort($standort_id) {
		$rows = Doctrine::getTable("SeminarArtAktualisierung")->findByDql("seminar_art_id=? AND standort_id=?", array($this->id, $standort_id));
		
		foreach ($rows as $row) {
			if ( $row->gesperrt == 1) {return true;}
		}
		return false;
	}

}
?>
