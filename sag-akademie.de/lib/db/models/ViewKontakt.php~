<?php

/**
 * ViewKontakt
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
class ViewKontakt extends BaseViewKontakt {

    public function setUp() {
	parent::setUp();
	$this->hasOne('XUser as GeaendertVon', array (
	    'local'=>'geaendert_von',
	    'foreign'=>'id',
	    )
	);
	$this->hasMany('Person as Personen', array(
	    'local' => 'id',
	    'foreign' => 'kontakt_id'
	    )
	);

	$this->hasMany('KontaktAlias as Alias', array(
	    'local'=>'id',
	    'foreign' => 'kontakt_id'
	    )
	);

	$this->hasOne('XUser as AngelegtVon', array (
	    'local'=>'angelegt_user_id',
	    'foreign'=>'id',
	    )
	);
    }

    function advancedSearchTableProxy($array) {
	$q = Doctrine_Query::create();

	$q->from( "ViewKontakt a" );
	MosaikDebug::msg($array, "Ausgabe:");
	$first = true;
	$tmp_where = "";
	$q->where("1 = 0");
	foreach($array as $key => $value) {
	    if($value == "or") {
		$q->orWhere($tmp_where);
		$tmp_where = "";
		$first = true;
	    }else {
		$exp = explode(";", $value);
		$val_array = explode(":", $exp[0]);
		switch($val_array[1]) {
		    case "string":
			$exp[2] = "%".$exp[2]."%";
			break;
		    case "date":
			$exp[2] = mysqlDateFromLocal($exp[2]);
			break;
		    case "datetime":
			$exp[2] = mysqlDatetimeFromLocal($exp[2]);
			break;
		}
		$search = "'".$exp[2]."'";
		if($first) {
		    $tmp_where .= "a.".$val_array[0]." ".$exp[1]." ".$search;
		    $first = false;
		}else {
		    $tmp_where .= " AND a.".$val_array[0]." ".$exp[1]." ".$search;
		}
	    }
	}
	$q->orWhere($tmp_where);
	MosaikDebug::msg($q->getSql(), "SQL");

	return $q;
    }
}