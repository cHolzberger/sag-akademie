<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KontaktTable extends Doctrine_Table
{
	public function findDuplicates($data) {
		$ignore = array ("gmbh", "und", "&", "co.", "kg", "u.", "gmbg");

		// php sucks when doing utf8
		$firma = strtolower(trim(utf8_decode($data['firma'])));
		$oFirma = $data['firma'];
		$kontakt_id = $data['id'];

		$firma = str_replace("- ", "-", $firma);
		$firma = str_replace(" -", "-", $firma);
		$firma = str_replace(" - ", "-", $firma);
		$firma = str_replace(" ", "%", $firma);
		$firma = str_replace("-", "%", $firma);
		
		$firma = utf8_encode($firma);
		$fD = explode("%", $firma);

		$q = Doctrine_Query::create()
		->select("k.*")
		->from('Kontakt k')
		->where("k.firma<>''")
		->andWhere("k.firma IS NOT NULL")
		->andWhere("k.id <> ?" , array( $kontakt_id));
		
		$hit = false;
		foreach ($fD as $f) {
			if ( empty($f)) continue ;
			if (in_array($f, $ignore)) continue ;

			$q->andWhere("k.firma LIKE ?", "%".$f."%");

			$hit = true;
		}

		if (!$hit) {
			$q->andWhere("1=0");
		}

		//if ( !empty ($data['strasse']) && !empty ($data['plz']))
		//	$q->orWhere ("k.strasse <> '' AND k.strasse like LOWER(?) AND k.plz LIKE ? AND k.firma<>'' AND k.firma IS NOT NULL ", array($data['strasse'], $data['plz']));
		//;
		
		$q->limit(1);
		if ( $q->count() == 0) {
			$q = Doctrine_Query::create()
		->select("k.*")
		->from('Kontakt k')
		->where("k.firma<>''")
		->andWhere("k.firma IS NOT NULL")
		->andWhere("k.id <> ". $kontakt_id)
		->andWhere("TRIM(k.firma) LIKE ?", $oFirma)
		->limit(1);
			if ( $q->count() == 0 && !empty ($data['kundennr'])) {
				$q = Doctrine_Query::create()
					->select("k.*")
					->from('Kontakt k')
					->where("k.firma<>''")
					->andWhere("k.firma IS NOT NULL")
					->andWhere("k.id <> ?",array( $kontakt_id))
					->andWhere("k.kundennr LIKE ?", $data['kundennr'])
					
					->limit(1);	
			}
		} 
		return $q;
	}

	public function offsetFind($offset = 1, $limit = 100) {
		$q = Doctrine_Query::create()
		->select("k.*")
		->from('Kontakt k')
		->limit($limit)
		->orderBy("k.firma ASC")
		->offset($offset);
		return $q;
	}


	public static function detailedIn($ids) {

		$q = Doctrine_Query::create()
		->from('ViewKontakt a')
		->leftJoin('a.Personen b')
		->leftJoin('b.Buchungen c')
		->whereIn('a.id', $ids);

		return $q;
	}

	public static function search($string) {
		$string = strtolower(trim(utf8_decode($string)));
		
		if (strlen($string) == 2) {
			$q = Doctrine_Query::create()
			->select('k.id')
			->from("ViewKontakt k")
			->where("k.firma LIKE ?", $string);
		} else {
			$q = Doctrine_Query::create()
			->select('k.id')
			->from("ViewKontakt k")
			->where("k.firma LIKE ?", $string)
			->orWhere("k.alias LIKE ?", $string)
			->orWhere("k.email LIKE ?", $string);
			
			$data = explode(" ", $string);
			foreach ( $data as $d ) {
				$d = utf8_encode($d); 
				
				if ( !empty($d)) {
					$q->orWhere("k.firma <> '' AND k.firma LIKE ?", "%$d%");
					$q->orWhere("k.alias <> '' AND k.alias LIKE ?", "%$d%");
					$q->orWhere("k.email <> '' AND k.email LIKE ?", "%$d%");

				}
			}
		}

		return $q->fetchArray();
	}

	function detailSearch($firma, $enclose="") {
		//$firma = utf8_decode ($firma);
		
		//$firma = str_replace(" ", "%", $firma);
		//$firma = str_replace("-", "%", $firma);
		
		//$firma = utf8_encode($firma);
		$firma = $enclose . $firma . $enclose;
		$q = Doctrine_Query::create()
		->from("ViewKontakt k")
		->where("k.firma <> '' AND k.firma LIKE ? ", array("%".$firma))
		->orWhere("k.alias <> '' AND k.alias LIKE ?", array("%".$firma))
		->orWhere("k.email <> '' AND k.email LIKE ?", array("%".$firma))
		->orWhere("k.firma <> '' AND k.firma LIKE ? ", array($firma . "%"))
		->orWhere("k.alias <> '' AND k.alias LIKE ?", array($firma . "%"))
		->orWhere("k.email <> '' AND k.email LIKE ?", array($firma . "%"));

		return $q;
	}



}
?>
