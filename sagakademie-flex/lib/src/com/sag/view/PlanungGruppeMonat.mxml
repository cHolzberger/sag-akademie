<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer  
xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:mx="library://ns.adobe.com/flex/mx" 
    xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:SAG="com.sag.view.*"
	initialize="componentInit()"
	mouseEnabled="true"
	height="100%"
	
> 	
	<fx:Script><![CDATA[
		import com.sag.models.SPlanungMonat;
		import com.sag.models.Standort;
		import com.sag.view.VMonatCanvas;

		import mx.binding.utils.BindingUtils;
		import mx.collections.ArrayCollection;
	
	[Bindable]
	public var termine:SPlanungMonat = null;
	
	[Bindable]
	public var showReferent:Boolean = false;
	
	[Bindable]
	public var showSperrung:Boolean = false;
	
	[Bindable]
	public var showTeilnehmer:Boolean = false;
	
	[Bindable]
	private var tage:ArrayCollection = new ArrayCollection();
	
	[Bindable]
	public var modus:String = "";
	private var _vstandorte:Vector.<VMonatCanvas> = new Vector.<VMonatCanvas>;
	
		var _h:Number = 0;

			
	public function componentInit():void {
		// see: https://bugs.adobe.com/jira/browse/SDK-26182
		mouseEnabled = true;
		//skin.mouseEnabled = true;
		//ChangeWatcher.watch(this, "termine", termineChanged);
		var vstandort:VMonatCanvas;
		var _w:int = 35;
		for each ( var standort:Standort in termine._standorte) {
			vstandort = new VMonatCanvas();

			vstandort.visible = standort.enabled;
			vstandort.standort = standort;
			vstandort.termine = termine;
			vstandort.top = 25;
			//BindingUtils.bindSetter( termineChanged, standort, "enabled");
			vstandort.visible = standort.enabled;
			if ( standort.enabled) {
				vstandort.left = _w;
				vstandort.invalidateSize();
				
				_w += 120;
				
				if ( _h <  vstandort.measuredHeight ) {
					trace(_h);
					_h = vstandort.measuredHeight;
										vstandort.invalidateProperties();

					vstandort.invalidateDisplayList();
				}
			}

			_vstandorte.push(vstandort);
			addElement(vstandort);
			invalidateSize();
			BindingUtils.bindProperty( vstandort, "visible", standort, "enabled");
			BindingUtils.bindProperty( vstandort, "modus", this, "modus");
			BindingUtils.bindProperty( vstandort, "showReferent", this, "showReferent");
			BindingUtils.bindProperty( vstandort, "showSperrung", this, "showSperrung");
			BindingUtils.bindProperty( vstandort, "showTeilnehmer", this, "showTeilnehmer");
			BindingUtils.bindSetter( termineChanged, this, "termine");
						BindingUtils.bindSetter( termineChanged, standort, "enabled");

			

		}
		height = _h;
		width = _w;
		invalidateSize();
       invalidateDisplayList();
	}
	
	private function termineChanged (evt=null):void { 
			var _w:int = 35;

			for each(var vstandort:Object in _vstandorte)
			{
				vstandort.visible = vstandort.standort.enabled;
				if ( vstandort.standort.enabled) {
					vstandort.left = _w;
					_w += 120;
				} else {
					vstandort.left = 0;
				}
				
					if ( _h <  vstandort.measuredHeight ) {
					trace(_h);
					_h = vstandort.measuredHeight;
										vstandort.invalidateProperties();

					vstandort.invalidateDisplayList();
				}
				vstandort.invalidateDisplayList();
			}
			
			height = _h;
			width = _w;
			invalidateSize();
			invalidateDisplayList();

	}
	
	]]></fx:Script>
				
			<s:Group left="0" right="0"  top="0" height="25" > 
				<s:Label  left="0" top="0" right="0" height="25" fontSize="16" horizontalCenter="0" verticalCenter="0" text="{termine.label}"></s:Label >
			</s:Group>
			<SAG:VMonatTageCanvas left="0" top="25" width="35" termine="{termine}" id="vtage" />
	
			<s:Line top="0" bottom="0" left="0"  id="sepline">
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="2" caps="square"/>
				</s:stroke>
			</s:Line>
		<!-- ein standort zu einem termin -->
	<!--<SAG:VMonatTageCanvas termine="{termine}" id="vtage" />-->
</s:SkinnableContainer>
